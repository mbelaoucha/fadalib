# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = fadatool$(EXEEXT)
subdir = src
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libfada_la_LIBADD =
am_libfada_la_OBJECTS = ADaAn_Parser.lo agc.lo assignment.lo \
	condition.lo contextquast.lo controlstructure.lo \
	domaincondition.lo edge.lo elementarydependence.lo \
	expression.lo fada.lo flattenquast.lo global.lo graph.lo \
	graphprinter.lo graphviz.lo guardedreferences.lo html.lo \
	index.lo inequation.lo latex.lo lc_rhs_term.lo \
	ldemonstrator.lo lex.yy.lo lexicographicinequation.lo \
	logicalclause.lo memorytracer.lo options.lo program.lo \
	quast.lo read_reference.lo references.lo solver.lo \
	statement.lo written_reference.lo
libfada_la_OBJECTS = $(am_libfada_la_OBJECTS)
PROGRAMS = $(bin_PROGRAMS)
am_fadatool_OBJECTS = fadatool-ADaAn_Parser.$(OBJEXT) \
	fadatool-agc.$(OBJEXT) fadatool-assignment.$(OBJEXT) \
	fadatool-condition.$(OBJEXT) fadatool-contextquast.$(OBJEXT) \
	fadatool-controlstructure.$(OBJEXT) \
	fadatool-domaincondition.$(OBJEXT) fadatool-edge.$(OBJEXT) \
	fadatool-elementarydependence.$(OBJEXT) \
	fadatool-expression.$(OBJEXT) fadatool-fada.$(OBJEXT) \
	fadatool-flattenquast.$(OBJEXT) fadatool-global.$(OBJEXT) \
	fadatool-graph.$(OBJEXT) fadatool-graphprinter.$(OBJEXT) \
	fadatool-graphviz.$(OBJEXT) \
	fadatool-guardedreferences.$(OBJEXT) fadatool-html.$(OBJEXT) \
	fadatool-index.$(OBJEXT) fadatool-inequation.$(OBJEXT) \
	fadatool-latex.$(OBJEXT) fadatool-lc_rhs_term.$(OBJEXT) \
	fadatool-ldemonstrator.$(OBJEXT) fadatool-lex.yy.$(OBJEXT) \
	fadatool-lexicographicinequation.$(OBJEXT) \
	fadatool-logicalclause.$(OBJEXT) \
	fadatool-memorytracer.$(OBJEXT) fadatool-options.$(OBJEXT) \
	fadatool-program.$(OBJEXT) fadatool-quast.$(OBJEXT) \
	fadatool-read_reference.$(OBJEXT) \
	fadatool-references.$(OBJEXT) fadatool-solver.$(OBJEXT) \
	fadatool-statement.$(OBJEXT) \
	fadatool-written_reference.$(OBJEXT)
fadatool_OBJECTS = $(am_fadatool_OBJECTS)
fadatool_LDADD = $(LDADD)
fadatool_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(fadatool_CXXFLAGS) \
	$(CXXFLAGS) $(fadatool_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libfada_la_SOURCES) $(fadatool_SOURCES)
DIST_SOURCES = $(libfada_la_SOURCES) $(fadatool_SOURCES)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOT = @DOT@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX2HTML = @LATEX2HTML@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# set the include path found by configure
fadatool_CXXFLAGS = $(AM_CXXFLAGS)
fadatool_CFLAGS = $(AM_CFLAGS)
INCLUDES = $(all_includes)

# the library search path.
fadatool_LDFLAGS = $(all_libraries) 
fadatool_SOURCES = ADaAn_Parser.cc agc.cpp assignment.cpp condition.cpp \
   contextquast.cpp controlstructure.cpp domaincondition.cpp edge.cpp \
   elementarydependence.cpp expression.cpp fada.cpp flattenquast.cpp global.cpp graph.cpp \
   graphprinter.cpp graphviz.cpp guardedreferences.cpp html.cpp index.cpp inequation.cpp \
   latex.cpp lc_rhs_term.cpp ldemonstrator.cpp lex.yy.c lexicographicinequation.cpp \
   logicalclause.cpp memorytracer.cpp options.cpp program.cpp quast.cpp read_reference.cpp \
   references.cpp solver.cpp statement.cpp written_reference.cpp

include_HEADERS = ADaAn_Parser.hh agc.h assignment.h condition.h constants.h \
   contextquast.h controlstructure.h domaincondition.h elementarydependence.h \
   expression.h fada.h flattenquast.h global.h graphviz.h guardedreferences.h html.h \
   index.h inequation.h latex.h lc_rhs_term.h ldemonstrator.h \
   lexicographicinequation.h logicalclause.h memorytracer.h options.h program.h quast.h \
   read_reference.h references.h solver.h statement.h written_reference.h

libfadalib_a_CXXFLAGS = $(AM_CXXFLAGS)
libfadalib_a_CFLAGS = $(AM_CFLAGS)
lib_LTLIBRARIES = libfada.la
libfada_la_SOURCES = ADaAn_Parser.cc agc.cpp assignment.cpp condition.cpp \
   contextquast.cpp controlstructure.cpp domaincondition.cpp edge.cpp \
   elementarydependence.cpp expression.cpp fada.cpp flattenquast.cpp global.cpp graph.cpp \
   graphprinter.cpp graphviz.cpp guardedreferences.cpp html.cpp index.cpp inequation.cpp \
   latex.cpp lc_rhs_term.cpp ldemonstrator.cpp lex.yy.c lexicographicinequation.cpp \
   logicalclause.cpp memorytracer.cpp options.cpp program.cpp quast.cpp read_reference.cpp \
   references.cpp solver.cpp statement.cpp written_reference.cpp

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libfada.la: $(libfada_la_OBJECTS) $(libfada_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libfada_la_OBJECTS) $(libfada_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
fadatool$(EXEEXT): $(fadatool_OBJECTS) $(fadatool_DEPENDENCIES) 
	@rm -f fadatool$(EXEEXT)
	$(fadatool_LINK) $(fadatool_OBJECTS) $(fadatool_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ADaAn_Parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/agc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assignment.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/condition.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/contextquast.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/controlstructure.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/domaincondition.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/edge.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elementarydependence.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/expression.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fada.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-ADaAn_Parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-agc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-assignment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-condition.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-contextquast.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-controlstructure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-domaincondition.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-edge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-elementarydependence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-expression.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-fada.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-flattenquast.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-global.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-graph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-graphprinter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-graphviz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-guardedreferences.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-html.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-index.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-inequation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-latex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-lc_rhs_term.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-ldemonstrator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-lex.yy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-lexicographicinequation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-logicalclause.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-memorytracer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-program.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-quast.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-read_reference.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-references.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-solver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-statement.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fadatool-written_reference.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flattenquast.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/global.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/graph.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/graphprinter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/graphviz.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/guardedreferences.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/html.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/index.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inequation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/latex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lc_rhs_term.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldemonstrator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lex.yy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lexicographicinequation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/logicalclause.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memorytracer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/options.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/program.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quast.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/read_reference.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/references.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/solver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/statement.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/written_reference.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

fadatool-lex.yy.o: lex.yy.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CFLAGS) $(CFLAGS) -MT fadatool-lex.yy.o -MD -MP -MF $(DEPDIR)/fadatool-lex.yy.Tpo -c -o fadatool-lex.yy.o `test -f 'lex.yy.c' || echo '$(srcdir)/'`lex.yy.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/fadatool-lex.yy.Tpo $(DEPDIR)/fadatool-lex.yy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lex.yy.c' object='fadatool-lex.yy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CFLAGS) $(CFLAGS) -c -o fadatool-lex.yy.o `test -f 'lex.yy.c' || echo '$(srcdir)/'`lex.yy.c

fadatool-lex.yy.obj: lex.yy.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CFLAGS) $(CFLAGS) -MT fadatool-lex.yy.obj -MD -MP -MF $(DEPDIR)/fadatool-lex.yy.Tpo -c -o fadatool-lex.yy.obj `if test -f 'lex.yy.c'; then $(CYGPATH_W) 'lex.yy.c'; else $(CYGPATH_W) '$(srcdir)/lex.yy.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/fadatool-lex.yy.Tpo $(DEPDIR)/fadatool-lex.yy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='lex.yy.c' object='fadatool-lex.yy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CFLAGS) $(CFLAGS) -c -o fadatool-lex.yy.obj `if test -f 'lex.yy.c'; then $(CYGPATH_W) 'lex.yy.c'; else $(CYGPATH_W) '$(srcdir)/lex.yy.c'; fi`

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

fadatool-ADaAn_Parser.o: ADaAn_Parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-ADaAn_Parser.o -MD -MP -MF $(DEPDIR)/fadatool-ADaAn_Parser.Tpo -c -o fadatool-ADaAn_Parser.o `test -f 'ADaAn_Parser.cc' || echo '$(srcdir)/'`ADaAn_Parser.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-ADaAn_Parser.Tpo $(DEPDIR)/fadatool-ADaAn_Parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ADaAn_Parser.cc' object='fadatool-ADaAn_Parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-ADaAn_Parser.o `test -f 'ADaAn_Parser.cc' || echo '$(srcdir)/'`ADaAn_Parser.cc

fadatool-ADaAn_Parser.obj: ADaAn_Parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-ADaAn_Parser.obj -MD -MP -MF $(DEPDIR)/fadatool-ADaAn_Parser.Tpo -c -o fadatool-ADaAn_Parser.obj `if test -f 'ADaAn_Parser.cc'; then $(CYGPATH_W) 'ADaAn_Parser.cc'; else $(CYGPATH_W) '$(srcdir)/ADaAn_Parser.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-ADaAn_Parser.Tpo $(DEPDIR)/fadatool-ADaAn_Parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ADaAn_Parser.cc' object='fadatool-ADaAn_Parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-ADaAn_Parser.obj `if test -f 'ADaAn_Parser.cc'; then $(CYGPATH_W) 'ADaAn_Parser.cc'; else $(CYGPATH_W) '$(srcdir)/ADaAn_Parser.cc'; fi`

fadatool-agc.o: agc.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-agc.o -MD -MP -MF $(DEPDIR)/fadatool-agc.Tpo -c -o fadatool-agc.o `test -f 'agc.cpp' || echo '$(srcdir)/'`agc.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-agc.Tpo $(DEPDIR)/fadatool-agc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='agc.cpp' object='fadatool-agc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-agc.o `test -f 'agc.cpp' || echo '$(srcdir)/'`agc.cpp

fadatool-agc.obj: agc.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-agc.obj -MD -MP -MF $(DEPDIR)/fadatool-agc.Tpo -c -o fadatool-agc.obj `if test -f 'agc.cpp'; then $(CYGPATH_W) 'agc.cpp'; else $(CYGPATH_W) '$(srcdir)/agc.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-agc.Tpo $(DEPDIR)/fadatool-agc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='agc.cpp' object='fadatool-agc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-agc.obj `if test -f 'agc.cpp'; then $(CYGPATH_W) 'agc.cpp'; else $(CYGPATH_W) '$(srcdir)/agc.cpp'; fi`

fadatool-assignment.o: assignment.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-assignment.o -MD -MP -MF $(DEPDIR)/fadatool-assignment.Tpo -c -o fadatool-assignment.o `test -f 'assignment.cpp' || echo '$(srcdir)/'`assignment.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-assignment.Tpo $(DEPDIR)/fadatool-assignment.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='assignment.cpp' object='fadatool-assignment.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-assignment.o `test -f 'assignment.cpp' || echo '$(srcdir)/'`assignment.cpp

fadatool-assignment.obj: assignment.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-assignment.obj -MD -MP -MF $(DEPDIR)/fadatool-assignment.Tpo -c -o fadatool-assignment.obj `if test -f 'assignment.cpp'; then $(CYGPATH_W) 'assignment.cpp'; else $(CYGPATH_W) '$(srcdir)/assignment.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-assignment.Tpo $(DEPDIR)/fadatool-assignment.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='assignment.cpp' object='fadatool-assignment.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-assignment.obj `if test -f 'assignment.cpp'; then $(CYGPATH_W) 'assignment.cpp'; else $(CYGPATH_W) '$(srcdir)/assignment.cpp'; fi`

fadatool-condition.o: condition.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-condition.o -MD -MP -MF $(DEPDIR)/fadatool-condition.Tpo -c -o fadatool-condition.o `test -f 'condition.cpp' || echo '$(srcdir)/'`condition.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-condition.Tpo $(DEPDIR)/fadatool-condition.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='condition.cpp' object='fadatool-condition.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-condition.o `test -f 'condition.cpp' || echo '$(srcdir)/'`condition.cpp

fadatool-condition.obj: condition.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-condition.obj -MD -MP -MF $(DEPDIR)/fadatool-condition.Tpo -c -o fadatool-condition.obj `if test -f 'condition.cpp'; then $(CYGPATH_W) 'condition.cpp'; else $(CYGPATH_W) '$(srcdir)/condition.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-condition.Tpo $(DEPDIR)/fadatool-condition.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='condition.cpp' object='fadatool-condition.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-condition.obj `if test -f 'condition.cpp'; then $(CYGPATH_W) 'condition.cpp'; else $(CYGPATH_W) '$(srcdir)/condition.cpp'; fi`

fadatool-contextquast.o: contextquast.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-contextquast.o -MD -MP -MF $(DEPDIR)/fadatool-contextquast.Tpo -c -o fadatool-contextquast.o `test -f 'contextquast.cpp' || echo '$(srcdir)/'`contextquast.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-contextquast.Tpo $(DEPDIR)/fadatool-contextquast.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contextquast.cpp' object='fadatool-contextquast.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-contextquast.o `test -f 'contextquast.cpp' || echo '$(srcdir)/'`contextquast.cpp

fadatool-contextquast.obj: contextquast.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-contextquast.obj -MD -MP -MF $(DEPDIR)/fadatool-contextquast.Tpo -c -o fadatool-contextquast.obj `if test -f 'contextquast.cpp'; then $(CYGPATH_W) 'contextquast.cpp'; else $(CYGPATH_W) '$(srcdir)/contextquast.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-contextquast.Tpo $(DEPDIR)/fadatool-contextquast.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contextquast.cpp' object='fadatool-contextquast.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-contextquast.obj `if test -f 'contextquast.cpp'; then $(CYGPATH_W) 'contextquast.cpp'; else $(CYGPATH_W) '$(srcdir)/contextquast.cpp'; fi`

fadatool-controlstructure.o: controlstructure.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-controlstructure.o -MD -MP -MF $(DEPDIR)/fadatool-controlstructure.Tpo -c -o fadatool-controlstructure.o `test -f 'controlstructure.cpp' || echo '$(srcdir)/'`controlstructure.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-controlstructure.Tpo $(DEPDIR)/fadatool-controlstructure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='controlstructure.cpp' object='fadatool-controlstructure.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-controlstructure.o `test -f 'controlstructure.cpp' || echo '$(srcdir)/'`controlstructure.cpp

fadatool-controlstructure.obj: controlstructure.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-controlstructure.obj -MD -MP -MF $(DEPDIR)/fadatool-controlstructure.Tpo -c -o fadatool-controlstructure.obj `if test -f 'controlstructure.cpp'; then $(CYGPATH_W) 'controlstructure.cpp'; else $(CYGPATH_W) '$(srcdir)/controlstructure.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-controlstructure.Tpo $(DEPDIR)/fadatool-controlstructure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='controlstructure.cpp' object='fadatool-controlstructure.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-controlstructure.obj `if test -f 'controlstructure.cpp'; then $(CYGPATH_W) 'controlstructure.cpp'; else $(CYGPATH_W) '$(srcdir)/controlstructure.cpp'; fi`

fadatool-domaincondition.o: domaincondition.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-domaincondition.o -MD -MP -MF $(DEPDIR)/fadatool-domaincondition.Tpo -c -o fadatool-domaincondition.o `test -f 'domaincondition.cpp' || echo '$(srcdir)/'`domaincondition.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-domaincondition.Tpo $(DEPDIR)/fadatool-domaincondition.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='domaincondition.cpp' object='fadatool-domaincondition.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-domaincondition.o `test -f 'domaincondition.cpp' || echo '$(srcdir)/'`domaincondition.cpp

fadatool-domaincondition.obj: domaincondition.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-domaincondition.obj -MD -MP -MF $(DEPDIR)/fadatool-domaincondition.Tpo -c -o fadatool-domaincondition.obj `if test -f 'domaincondition.cpp'; then $(CYGPATH_W) 'domaincondition.cpp'; else $(CYGPATH_W) '$(srcdir)/domaincondition.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-domaincondition.Tpo $(DEPDIR)/fadatool-domaincondition.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='domaincondition.cpp' object='fadatool-domaincondition.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-domaincondition.obj `if test -f 'domaincondition.cpp'; then $(CYGPATH_W) 'domaincondition.cpp'; else $(CYGPATH_W) '$(srcdir)/domaincondition.cpp'; fi`

fadatool-edge.o: edge.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-edge.o -MD -MP -MF $(DEPDIR)/fadatool-edge.Tpo -c -o fadatool-edge.o `test -f 'edge.cpp' || echo '$(srcdir)/'`edge.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-edge.Tpo $(DEPDIR)/fadatool-edge.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='edge.cpp' object='fadatool-edge.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-edge.o `test -f 'edge.cpp' || echo '$(srcdir)/'`edge.cpp

fadatool-edge.obj: edge.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-edge.obj -MD -MP -MF $(DEPDIR)/fadatool-edge.Tpo -c -o fadatool-edge.obj `if test -f 'edge.cpp'; then $(CYGPATH_W) 'edge.cpp'; else $(CYGPATH_W) '$(srcdir)/edge.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-edge.Tpo $(DEPDIR)/fadatool-edge.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='edge.cpp' object='fadatool-edge.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-edge.obj `if test -f 'edge.cpp'; then $(CYGPATH_W) 'edge.cpp'; else $(CYGPATH_W) '$(srcdir)/edge.cpp'; fi`

fadatool-elementarydependence.o: elementarydependence.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-elementarydependence.o -MD -MP -MF $(DEPDIR)/fadatool-elementarydependence.Tpo -c -o fadatool-elementarydependence.o `test -f 'elementarydependence.cpp' || echo '$(srcdir)/'`elementarydependence.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-elementarydependence.Tpo $(DEPDIR)/fadatool-elementarydependence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='elementarydependence.cpp' object='fadatool-elementarydependence.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-elementarydependence.o `test -f 'elementarydependence.cpp' || echo '$(srcdir)/'`elementarydependence.cpp

fadatool-elementarydependence.obj: elementarydependence.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-elementarydependence.obj -MD -MP -MF $(DEPDIR)/fadatool-elementarydependence.Tpo -c -o fadatool-elementarydependence.obj `if test -f 'elementarydependence.cpp'; then $(CYGPATH_W) 'elementarydependence.cpp'; else $(CYGPATH_W) '$(srcdir)/elementarydependence.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-elementarydependence.Tpo $(DEPDIR)/fadatool-elementarydependence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='elementarydependence.cpp' object='fadatool-elementarydependence.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-elementarydependence.obj `if test -f 'elementarydependence.cpp'; then $(CYGPATH_W) 'elementarydependence.cpp'; else $(CYGPATH_W) '$(srcdir)/elementarydependence.cpp'; fi`

fadatool-expression.o: expression.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-expression.o -MD -MP -MF $(DEPDIR)/fadatool-expression.Tpo -c -o fadatool-expression.o `test -f 'expression.cpp' || echo '$(srcdir)/'`expression.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-expression.Tpo $(DEPDIR)/fadatool-expression.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='expression.cpp' object='fadatool-expression.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-expression.o `test -f 'expression.cpp' || echo '$(srcdir)/'`expression.cpp

fadatool-expression.obj: expression.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-expression.obj -MD -MP -MF $(DEPDIR)/fadatool-expression.Tpo -c -o fadatool-expression.obj `if test -f 'expression.cpp'; then $(CYGPATH_W) 'expression.cpp'; else $(CYGPATH_W) '$(srcdir)/expression.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-expression.Tpo $(DEPDIR)/fadatool-expression.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='expression.cpp' object='fadatool-expression.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-expression.obj `if test -f 'expression.cpp'; then $(CYGPATH_W) 'expression.cpp'; else $(CYGPATH_W) '$(srcdir)/expression.cpp'; fi`

fadatool-fada.o: fada.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-fada.o -MD -MP -MF $(DEPDIR)/fadatool-fada.Tpo -c -o fadatool-fada.o `test -f 'fada.cpp' || echo '$(srcdir)/'`fada.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-fada.Tpo $(DEPDIR)/fadatool-fada.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fada.cpp' object='fadatool-fada.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-fada.o `test -f 'fada.cpp' || echo '$(srcdir)/'`fada.cpp

fadatool-fada.obj: fada.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-fada.obj -MD -MP -MF $(DEPDIR)/fadatool-fada.Tpo -c -o fadatool-fada.obj `if test -f 'fada.cpp'; then $(CYGPATH_W) 'fada.cpp'; else $(CYGPATH_W) '$(srcdir)/fada.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-fada.Tpo $(DEPDIR)/fadatool-fada.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fada.cpp' object='fadatool-fada.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-fada.obj `if test -f 'fada.cpp'; then $(CYGPATH_W) 'fada.cpp'; else $(CYGPATH_W) '$(srcdir)/fada.cpp'; fi`

fadatool-flattenquast.o: flattenquast.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-flattenquast.o -MD -MP -MF $(DEPDIR)/fadatool-flattenquast.Tpo -c -o fadatool-flattenquast.o `test -f 'flattenquast.cpp' || echo '$(srcdir)/'`flattenquast.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-flattenquast.Tpo $(DEPDIR)/fadatool-flattenquast.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='flattenquast.cpp' object='fadatool-flattenquast.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-flattenquast.o `test -f 'flattenquast.cpp' || echo '$(srcdir)/'`flattenquast.cpp

fadatool-flattenquast.obj: flattenquast.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-flattenquast.obj -MD -MP -MF $(DEPDIR)/fadatool-flattenquast.Tpo -c -o fadatool-flattenquast.obj `if test -f 'flattenquast.cpp'; then $(CYGPATH_W) 'flattenquast.cpp'; else $(CYGPATH_W) '$(srcdir)/flattenquast.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-flattenquast.Tpo $(DEPDIR)/fadatool-flattenquast.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='flattenquast.cpp' object='fadatool-flattenquast.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-flattenquast.obj `if test -f 'flattenquast.cpp'; then $(CYGPATH_W) 'flattenquast.cpp'; else $(CYGPATH_W) '$(srcdir)/flattenquast.cpp'; fi`

fadatool-global.o: global.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-global.o -MD -MP -MF $(DEPDIR)/fadatool-global.Tpo -c -o fadatool-global.o `test -f 'global.cpp' || echo '$(srcdir)/'`global.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-global.Tpo $(DEPDIR)/fadatool-global.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='global.cpp' object='fadatool-global.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-global.o `test -f 'global.cpp' || echo '$(srcdir)/'`global.cpp

fadatool-global.obj: global.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-global.obj -MD -MP -MF $(DEPDIR)/fadatool-global.Tpo -c -o fadatool-global.obj `if test -f 'global.cpp'; then $(CYGPATH_W) 'global.cpp'; else $(CYGPATH_W) '$(srcdir)/global.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-global.Tpo $(DEPDIR)/fadatool-global.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='global.cpp' object='fadatool-global.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-global.obj `if test -f 'global.cpp'; then $(CYGPATH_W) 'global.cpp'; else $(CYGPATH_W) '$(srcdir)/global.cpp'; fi`

fadatool-graph.o: graph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-graph.o -MD -MP -MF $(DEPDIR)/fadatool-graph.Tpo -c -o fadatool-graph.o `test -f 'graph.cpp' || echo '$(srcdir)/'`graph.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-graph.Tpo $(DEPDIR)/fadatool-graph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graph.cpp' object='fadatool-graph.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-graph.o `test -f 'graph.cpp' || echo '$(srcdir)/'`graph.cpp

fadatool-graph.obj: graph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-graph.obj -MD -MP -MF $(DEPDIR)/fadatool-graph.Tpo -c -o fadatool-graph.obj `if test -f 'graph.cpp'; then $(CYGPATH_W) 'graph.cpp'; else $(CYGPATH_W) '$(srcdir)/graph.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-graph.Tpo $(DEPDIR)/fadatool-graph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graph.cpp' object='fadatool-graph.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-graph.obj `if test -f 'graph.cpp'; then $(CYGPATH_W) 'graph.cpp'; else $(CYGPATH_W) '$(srcdir)/graph.cpp'; fi`

fadatool-graphprinter.o: graphprinter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-graphprinter.o -MD -MP -MF $(DEPDIR)/fadatool-graphprinter.Tpo -c -o fadatool-graphprinter.o `test -f 'graphprinter.cpp' || echo '$(srcdir)/'`graphprinter.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-graphprinter.Tpo $(DEPDIR)/fadatool-graphprinter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphprinter.cpp' object='fadatool-graphprinter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-graphprinter.o `test -f 'graphprinter.cpp' || echo '$(srcdir)/'`graphprinter.cpp

fadatool-graphprinter.obj: graphprinter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-graphprinter.obj -MD -MP -MF $(DEPDIR)/fadatool-graphprinter.Tpo -c -o fadatool-graphprinter.obj `if test -f 'graphprinter.cpp'; then $(CYGPATH_W) 'graphprinter.cpp'; else $(CYGPATH_W) '$(srcdir)/graphprinter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-graphprinter.Tpo $(DEPDIR)/fadatool-graphprinter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphprinter.cpp' object='fadatool-graphprinter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-graphprinter.obj `if test -f 'graphprinter.cpp'; then $(CYGPATH_W) 'graphprinter.cpp'; else $(CYGPATH_W) '$(srcdir)/graphprinter.cpp'; fi`

fadatool-graphviz.o: graphviz.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-graphviz.o -MD -MP -MF $(DEPDIR)/fadatool-graphviz.Tpo -c -o fadatool-graphviz.o `test -f 'graphviz.cpp' || echo '$(srcdir)/'`graphviz.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-graphviz.Tpo $(DEPDIR)/fadatool-graphviz.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphviz.cpp' object='fadatool-graphviz.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-graphviz.o `test -f 'graphviz.cpp' || echo '$(srcdir)/'`graphviz.cpp

fadatool-graphviz.obj: graphviz.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-graphviz.obj -MD -MP -MF $(DEPDIR)/fadatool-graphviz.Tpo -c -o fadatool-graphviz.obj `if test -f 'graphviz.cpp'; then $(CYGPATH_W) 'graphviz.cpp'; else $(CYGPATH_W) '$(srcdir)/graphviz.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-graphviz.Tpo $(DEPDIR)/fadatool-graphviz.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='graphviz.cpp' object='fadatool-graphviz.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-graphviz.obj `if test -f 'graphviz.cpp'; then $(CYGPATH_W) 'graphviz.cpp'; else $(CYGPATH_W) '$(srcdir)/graphviz.cpp'; fi`

fadatool-guardedreferences.o: guardedreferences.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-guardedreferences.o -MD -MP -MF $(DEPDIR)/fadatool-guardedreferences.Tpo -c -o fadatool-guardedreferences.o `test -f 'guardedreferences.cpp' || echo '$(srcdir)/'`guardedreferences.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-guardedreferences.Tpo $(DEPDIR)/fadatool-guardedreferences.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='guardedreferences.cpp' object='fadatool-guardedreferences.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-guardedreferences.o `test -f 'guardedreferences.cpp' || echo '$(srcdir)/'`guardedreferences.cpp

fadatool-guardedreferences.obj: guardedreferences.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-guardedreferences.obj -MD -MP -MF $(DEPDIR)/fadatool-guardedreferences.Tpo -c -o fadatool-guardedreferences.obj `if test -f 'guardedreferences.cpp'; then $(CYGPATH_W) 'guardedreferences.cpp'; else $(CYGPATH_W) '$(srcdir)/guardedreferences.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-guardedreferences.Tpo $(DEPDIR)/fadatool-guardedreferences.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='guardedreferences.cpp' object='fadatool-guardedreferences.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-guardedreferences.obj `if test -f 'guardedreferences.cpp'; then $(CYGPATH_W) 'guardedreferences.cpp'; else $(CYGPATH_W) '$(srcdir)/guardedreferences.cpp'; fi`

fadatool-html.o: html.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-html.o -MD -MP -MF $(DEPDIR)/fadatool-html.Tpo -c -o fadatool-html.o `test -f 'html.cpp' || echo '$(srcdir)/'`html.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-html.Tpo $(DEPDIR)/fadatool-html.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='html.cpp' object='fadatool-html.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-html.o `test -f 'html.cpp' || echo '$(srcdir)/'`html.cpp

fadatool-html.obj: html.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-html.obj -MD -MP -MF $(DEPDIR)/fadatool-html.Tpo -c -o fadatool-html.obj `if test -f 'html.cpp'; then $(CYGPATH_W) 'html.cpp'; else $(CYGPATH_W) '$(srcdir)/html.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-html.Tpo $(DEPDIR)/fadatool-html.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='html.cpp' object='fadatool-html.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-html.obj `if test -f 'html.cpp'; then $(CYGPATH_W) 'html.cpp'; else $(CYGPATH_W) '$(srcdir)/html.cpp'; fi`

fadatool-index.o: index.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-index.o -MD -MP -MF $(DEPDIR)/fadatool-index.Tpo -c -o fadatool-index.o `test -f 'index.cpp' || echo '$(srcdir)/'`index.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-index.Tpo $(DEPDIR)/fadatool-index.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='index.cpp' object='fadatool-index.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-index.o `test -f 'index.cpp' || echo '$(srcdir)/'`index.cpp

fadatool-index.obj: index.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-index.obj -MD -MP -MF $(DEPDIR)/fadatool-index.Tpo -c -o fadatool-index.obj `if test -f 'index.cpp'; then $(CYGPATH_W) 'index.cpp'; else $(CYGPATH_W) '$(srcdir)/index.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-index.Tpo $(DEPDIR)/fadatool-index.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='index.cpp' object='fadatool-index.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-index.obj `if test -f 'index.cpp'; then $(CYGPATH_W) 'index.cpp'; else $(CYGPATH_W) '$(srcdir)/index.cpp'; fi`

fadatool-inequation.o: inequation.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-inequation.o -MD -MP -MF $(DEPDIR)/fadatool-inequation.Tpo -c -o fadatool-inequation.o `test -f 'inequation.cpp' || echo '$(srcdir)/'`inequation.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-inequation.Tpo $(DEPDIR)/fadatool-inequation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='inequation.cpp' object='fadatool-inequation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-inequation.o `test -f 'inequation.cpp' || echo '$(srcdir)/'`inequation.cpp

fadatool-inequation.obj: inequation.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-inequation.obj -MD -MP -MF $(DEPDIR)/fadatool-inequation.Tpo -c -o fadatool-inequation.obj `if test -f 'inequation.cpp'; then $(CYGPATH_W) 'inequation.cpp'; else $(CYGPATH_W) '$(srcdir)/inequation.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-inequation.Tpo $(DEPDIR)/fadatool-inequation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='inequation.cpp' object='fadatool-inequation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-inequation.obj `if test -f 'inequation.cpp'; then $(CYGPATH_W) 'inequation.cpp'; else $(CYGPATH_W) '$(srcdir)/inequation.cpp'; fi`

fadatool-latex.o: latex.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-latex.o -MD -MP -MF $(DEPDIR)/fadatool-latex.Tpo -c -o fadatool-latex.o `test -f 'latex.cpp' || echo '$(srcdir)/'`latex.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-latex.Tpo $(DEPDIR)/fadatool-latex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='latex.cpp' object='fadatool-latex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-latex.o `test -f 'latex.cpp' || echo '$(srcdir)/'`latex.cpp

fadatool-latex.obj: latex.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-latex.obj -MD -MP -MF $(DEPDIR)/fadatool-latex.Tpo -c -o fadatool-latex.obj `if test -f 'latex.cpp'; then $(CYGPATH_W) 'latex.cpp'; else $(CYGPATH_W) '$(srcdir)/latex.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-latex.Tpo $(DEPDIR)/fadatool-latex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='latex.cpp' object='fadatool-latex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-latex.obj `if test -f 'latex.cpp'; then $(CYGPATH_W) 'latex.cpp'; else $(CYGPATH_W) '$(srcdir)/latex.cpp'; fi`

fadatool-lc_rhs_term.o: lc_rhs_term.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-lc_rhs_term.o -MD -MP -MF $(DEPDIR)/fadatool-lc_rhs_term.Tpo -c -o fadatool-lc_rhs_term.o `test -f 'lc_rhs_term.cpp' || echo '$(srcdir)/'`lc_rhs_term.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-lc_rhs_term.Tpo $(DEPDIR)/fadatool-lc_rhs_term.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lc_rhs_term.cpp' object='fadatool-lc_rhs_term.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-lc_rhs_term.o `test -f 'lc_rhs_term.cpp' || echo '$(srcdir)/'`lc_rhs_term.cpp

fadatool-lc_rhs_term.obj: lc_rhs_term.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-lc_rhs_term.obj -MD -MP -MF $(DEPDIR)/fadatool-lc_rhs_term.Tpo -c -o fadatool-lc_rhs_term.obj `if test -f 'lc_rhs_term.cpp'; then $(CYGPATH_W) 'lc_rhs_term.cpp'; else $(CYGPATH_W) '$(srcdir)/lc_rhs_term.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-lc_rhs_term.Tpo $(DEPDIR)/fadatool-lc_rhs_term.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lc_rhs_term.cpp' object='fadatool-lc_rhs_term.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-lc_rhs_term.obj `if test -f 'lc_rhs_term.cpp'; then $(CYGPATH_W) 'lc_rhs_term.cpp'; else $(CYGPATH_W) '$(srcdir)/lc_rhs_term.cpp'; fi`

fadatool-ldemonstrator.o: ldemonstrator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-ldemonstrator.o -MD -MP -MF $(DEPDIR)/fadatool-ldemonstrator.Tpo -c -o fadatool-ldemonstrator.o `test -f 'ldemonstrator.cpp' || echo '$(srcdir)/'`ldemonstrator.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-ldemonstrator.Tpo $(DEPDIR)/fadatool-ldemonstrator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ldemonstrator.cpp' object='fadatool-ldemonstrator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-ldemonstrator.o `test -f 'ldemonstrator.cpp' || echo '$(srcdir)/'`ldemonstrator.cpp

fadatool-ldemonstrator.obj: ldemonstrator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-ldemonstrator.obj -MD -MP -MF $(DEPDIR)/fadatool-ldemonstrator.Tpo -c -o fadatool-ldemonstrator.obj `if test -f 'ldemonstrator.cpp'; then $(CYGPATH_W) 'ldemonstrator.cpp'; else $(CYGPATH_W) '$(srcdir)/ldemonstrator.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-ldemonstrator.Tpo $(DEPDIR)/fadatool-ldemonstrator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ldemonstrator.cpp' object='fadatool-ldemonstrator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-ldemonstrator.obj `if test -f 'ldemonstrator.cpp'; then $(CYGPATH_W) 'ldemonstrator.cpp'; else $(CYGPATH_W) '$(srcdir)/ldemonstrator.cpp'; fi`

fadatool-lexicographicinequation.o: lexicographicinequation.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-lexicographicinequation.o -MD -MP -MF $(DEPDIR)/fadatool-lexicographicinequation.Tpo -c -o fadatool-lexicographicinequation.o `test -f 'lexicographicinequation.cpp' || echo '$(srcdir)/'`lexicographicinequation.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-lexicographicinequation.Tpo $(DEPDIR)/fadatool-lexicographicinequation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicographicinequation.cpp' object='fadatool-lexicographicinequation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-lexicographicinequation.o `test -f 'lexicographicinequation.cpp' || echo '$(srcdir)/'`lexicographicinequation.cpp

fadatool-lexicographicinequation.obj: lexicographicinequation.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-lexicographicinequation.obj -MD -MP -MF $(DEPDIR)/fadatool-lexicographicinequation.Tpo -c -o fadatool-lexicographicinequation.obj `if test -f 'lexicographicinequation.cpp'; then $(CYGPATH_W) 'lexicographicinequation.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicographicinequation.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-lexicographicinequation.Tpo $(DEPDIR)/fadatool-lexicographicinequation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lexicographicinequation.cpp' object='fadatool-lexicographicinequation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-lexicographicinequation.obj `if test -f 'lexicographicinequation.cpp'; then $(CYGPATH_W) 'lexicographicinequation.cpp'; else $(CYGPATH_W) '$(srcdir)/lexicographicinequation.cpp'; fi`

fadatool-logicalclause.o: logicalclause.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-logicalclause.o -MD -MP -MF $(DEPDIR)/fadatool-logicalclause.Tpo -c -o fadatool-logicalclause.o `test -f 'logicalclause.cpp' || echo '$(srcdir)/'`logicalclause.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-logicalclause.Tpo $(DEPDIR)/fadatool-logicalclause.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='logicalclause.cpp' object='fadatool-logicalclause.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-logicalclause.o `test -f 'logicalclause.cpp' || echo '$(srcdir)/'`logicalclause.cpp

fadatool-logicalclause.obj: logicalclause.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-logicalclause.obj -MD -MP -MF $(DEPDIR)/fadatool-logicalclause.Tpo -c -o fadatool-logicalclause.obj `if test -f 'logicalclause.cpp'; then $(CYGPATH_W) 'logicalclause.cpp'; else $(CYGPATH_W) '$(srcdir)/logicalclause.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-logicalclause.Tpo $(DEPDIR)/fadatool-logicalclause.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='logicalclause.cpp' object='fadatool-logicalclause.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-logicalclause.obj `if test -f 'logicalclause.cpp'; then $(CYGPATH_W) 'logicalclause.cpp'; else $(CYGPATH_W) '$(srcdir)/logicalclause.cpp'; fi`

fadatool-memorytracer.o: memorytracer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-memorytracer.o -MD -MP -MF $(DEPDIR)/fadatool-memorytracer.Tpo -c -o fadatool-memorytracer.o `test -f 'memorytracer.cpp' || echo '$(srcdir)/'`memorytracer.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-memorytracer.Tpo $(DEPDIR)/fadatool-memorytracer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='memorytracer.cpp' object='fadatool-memorytracer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-memorytracer.o `test -f 'memorytracer.cpp' || echo '$(srcdir)/'`memorytracer.cpp

fadatool-memorytracer.obj: memorytracer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-memorytracer.obj -MD -MP -MF $(DEPDIR)/fadatool-memorytracer.Tpo -c -o fadatool-memorytracer.obj `if test -f 'memorytracer.cpp'; then $(CYGPATH_W) 'memorytracer.cpp'; else $(CYGPATH_W) '$(srcdir)/memorytracer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-memorytracer.Tpo $(DEPDIR)/fadatool-memorytracer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='memorytracer.cpp' object='fadatool-memorytracer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-memorytracer.obj `if test -f 'memorytracer.cpp'; then $(CYGPATH_W) 'memorytracer.cpp'; else $(CYGPATH_W) '$(srcdir)/memorytracer.cpp'; fi`

fadatool-options.o: options.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-options.o -MD -MP -MF $(DEPDIR)/fadatool-options.Tpo -c -o fadatool-options.o `test -f 'options.cpp' || echo '$(srcdir)/'`options.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-options.Tpo $(DEPDIR)/fadatool-options.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='options.cpp' object='fadatool-options.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-options.o `test -f 'options.cpp' || echo '$(srcdir)/'`options.cpp

fadatool-options.obj: options.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-options.obj -MD -MP -MF $(DEPDIR)/fadatool-options.Tpo -c -o fadatool-options.obj `if test -f 'options.cpp'; then $(CYGPATH_W) 'options.cpp'; else $(CYGPATH_W) '$(srcdir)/options.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-options.Tpo $(DEPDIR)/fadatool-options.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='options.cpp' object='fadatool-options.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-options.obj `if test -f 'options.cpp'; then $(CYGPATH_W) 'options.cpp'; else $(CYGPATH_W) '$(srcdir)/options.cpp'; fi`

fadatool-program.o: program.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-program.o -MD -MP -MF $(DEPDIR)/fadatool-program.Tpo -c -o fadatool-program.o `test -f 'program.cpp' || echo '$(srcdir)/'`program.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-program.Tpo $(DEPDIR)/fadatool-program.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='program.cpp' object='fadatool-program.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-program.o `test -f 'program.cpp' || echo '$(srcdir)/'`program.cpp

fadatool-program.obj: program.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-program.obj -MD -MP -MF $(DEPDIR)/fadatool-program.Tpo -c -o fadatool-program.obj `if test -f 'program.cpp'; then $(CYGPATH_W) 'program.cpp'; else $(CYGPATH_W) '$(srcdir)/program.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-program.Tpo $(DEPDIR)/fadatool-program.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='program.cpp' object='fadatool-program.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-program.obj `if test -f 'program.cpp'; then $(CYGPATH_W) 'program.cpp'; else $(CYGPATH_W) '$(srcdir)/program.cpp'; fi`

fadatool-quast.o: quast.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-quast.o -MD -MP -MF $(DEPDIR)/fadatool-quast.Tpo -c -o fadatool-quast.o `test -f 'quast.cpp' || echo '$(srcdir)/'`quast.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-quast.Tpo $(DEPDIR)/fadatool-quast.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='quast.cpp' object='fadatool-quast.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-quast.o `test -f 'quast.cpp' || echo '$(srcdir)/'`quast.cpp

fadatool-quast.obj: quast.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-quast.obj -MD -MP -MF $(DEPDIR)/fadatool-quast.Tpo -c -o fadatool-quast.obj `if test -f 'quast.cpp'; then $(CYGPATH_W) 'quast.cpp'; else $(CYGPATH_W) '$(srcdir)/quast.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-quast.Tpo $(DEPDIR)/fadatool-quast.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='quast.cpp' object='fadatool-quast.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-quast.obj `if test -f 'quast.cpp'; then $(CYGPATH_W) 'quast.cpp'; else $(CYGPATH_W) '$(srcdir)/quast.cpp'; fi`

fadatool-read_reference.o: read_reference.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-read_reference.o -MD -MP -MF $(DEPDIR)/fadatool-read_reference.Tpo -c -o fadatool-read_reference.o `test -f 'read_reference.cpp' || echo '$(srcdir)/'`read_reference.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-read_reference.Tpo $(DEPDIR)/fadatool-read_reference.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='read_reference.cpp' object='fadatool-read_reference.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-read_reference.o `test -f 'read_reference.cpp' || echo '$(srcdir)/'`read_reference.cpp

fadatool-read_reference.obj: read_reference.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-read_reference.obj -MD -MP -MF $(DEPDIR)/fadatool-read_reference.Tpo -c -o fadatool-read_reference.obj `if test -f 'read_reference.cpp'; then $(CYGPATH_W) 'read_reference.cpp'; else $(CYGPATH_W) '$(srcdir)/read_reference.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-read_reference.Tpo $(DEPDIR)/fadatool-read_reference.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='read_reference.cpp' object='fadatool-read_reference.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-read_reference.obj `if test -f 'read_reference.cpp'; then $(CYGPATH_W) 'read_reference.cpp'; else $(CYGPATH_W) '$(srcdir)/read_reference.cpp'; fi`

fadatool-references.o: references.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-references.o -MD -MP -MF $(DEPDIR)/fadatool-references.Tpo -c -o fadatool-references.o `test -f 'references.cpp' || echo '$(srcdir)/'`references.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-references.Tpo $(DEPDIR)/fadatool-references.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='references.cpp' object='fadatool-references.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-references.o `test -f 'references.cpp' || echo '$(srcdir)/'`references.cpp

fadatool-references.obj: references.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-references.obj -MD -MP -MF $(DEPDIR)/fadatool-references.Tpo -c -o fadatool-references.obj `if test -f 'references.cpp'; then $(CYGPATH_W) 'references.cpp'; else $(CYGPATH_W) '$(srcdir)/references.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-references.Tpo $(DEPDIR)/fadatool-references.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='references.cpp' object='fadatool-references.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-references.obj `if test -f 'references.cpp'; then $(CYGPATH_W) 'references.cpp'; else $(CYGPATH_W) '$(srcdir)/references.cpp'; fi`

fadatool-solver.o: solver.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-solver.o -MD -MP -MF $(DEPDIR)/fadatool-solver.Tpo -c -o fadatool-solver.o `test -f 'solver.cpp' || echo '$(srcdir)/'`solver.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-solver.Tpo $(DEPDIR)/fadatool-solver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='solver.cpp' object='fadatool-solver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-solver.o `test -f 'solver.cpp' || echo '$(srcdir)/'`solver.cpp

fadatool-solver.obj: solver.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-solver.obj -MD -MP -MF $(DEPDIR)/fadatool-solver.Tpo -c -o fadatool-solver.obj `if test -f 'solver.cpp'; then $(CYGPATH_W) 'solver.cpp'; else $(CYGPATH_W) '$(srcdir)/solver.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-solver.Tpo $(DEPDIR)/fadatool-solver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='solver.cpp' object='fadatool-solver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-solver.obj `if test -f 'solver.cpp'; then $(CYGPATH_W) 'solver.cpp'; else $(CYGPATH_W) '$(srcdir)/solver.cpp'; fi`

fadatool-statement.o: statement.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-statement.o -MD -MP -MF $(DEPDIR)/fadatool-statement.Tpo -c -o fadatool-statement.o `test -f 'statement.cpp' || echo '$(srcdir)/'`statement.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-statement.Tpo $(DEPDIR)/fadatool-statement.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='statement.cpp' object='fadatool-statement.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-statement.o `test -f 'statement.cpp' || echo '$(srcdir)/'`statement.cpp

fadatool-statement.obj: statement.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-statement.obj -MD -MP -MF $(DEPDIR)/fadatool-statement.Tpo -c -o fadatool-statement.obj `if test -f 'statement.cpp'; then $(CYGPATH_W) 'statement.cpp'; else $(CYGPATH_W) '$(srcdir)/statement.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-statement.Tpo $(DEPDIR)/fadatool-statement.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='statement.cpp' object='fadatool-statement.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-statement.obj `if test -f 'statement.cpp'; then $(CYGPATH_W) 'statement.cpp'; else $(CYGPATH_W) '$(srcdir)/statement.cpp'; fi`

fadatool-written_reference.o: written_reference.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-written_reference.o -MD -MP -MF $(DEPDIR)/fadatool-written_reference.Tpo -c -o fadatool-written_reference.o `test -f 'written_reference.cpp' || echo '$(srcdir)/'`written_reference.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-written_reference.Tpo $(DEPDIR)/fadatool-written_reference.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='written_reference.cpp' object='fadatool-written_reference.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-written_reference.o `test -f 'written_reference.cpp' || echo '$(srcdir)/'`written_reference.cpp

fadatool-written_reference.obj: written_reference.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -MT fadatool-written_reference.obj -MD -MP -MF $(DEPDIR)/fadatool-written_reference.Tpo -c -o fadatool-written_reference.obj `if test -f 'written_reference.cpp'; then $(CYGPATH_W) 'written_reference.cpp'; else $(CYGPATH_W) '$(srcdir)/written_reference.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fadatool-written_reference.Tpo $(DEPDIR)/fadatool-written_reference.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='written_reference.cpp' object='fadatool-written_reference.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fadatool_CXXFLAGS) $(CXXFLAGS) -c -o fadatool-written_reference.obj `if test -f 'written_reference.cpp'; then $(CYGPATH_W) 'written_reference.cpp'; else $(CYGPATH_W) '$(srcdir)/written_reference.cpp'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(includedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
